@model IEnumerable<TimeSheet.Models.Timesheet>

<style>
    table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        text-align: left;
        background-color: #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    thead tr {
        background-color: #4CAF50;
        color: white;
        text-align: left;
    }

    th, td {
        padding: 12px 15px;
        border: 1px solid #ddd;
        text-align: center;
    }

    tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    tbody tr:hover {
        background-color: #f1f1f1;
    }

    .button-container {
        margin-top: 20px;
        text-align: right;
    }

        .button-container a {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
        }

            .button-container a:hover {
                background-color: #45a049;
            }

    .download-timesheet {
        height: 2.7rem;
    }


    .no-records {
        margin-top: 20px;
        color: #999;
        font-style: italic;
    }

    .form-container {
        display: flex;
    }

    .search-wrapper {
        display: flex;
        align-items: center;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
        max-width: 25rem;
        background-color: #fff;
    }

    .search-input {
        flex: 1;
        width: 21rem;
        border: none;
        padding: 10px;
        font-size: 16px;
        outline: none;
        border-radius: 4px 0 0 4px;
    }

    .icon-container {
        display: flex;
        align-items: center;
        background-color: #eee;
        border-left: 1px solid #ccc;
        padding-right: 5px;
        border-radius: 0 4px 4px 0;
    }

    .search-icon, .cancel-icon {
        cursor: pointer;
        padding: 10px;
    }

        .search-icon i, .cancel-icon i {
            font-size: 16px;
        }

    .cancel-icon {
        display: none; /* Hide by default */
    }

    /* Show or hide the cancel icon based on input value */
    .search-container {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

</style>
<h2>Timesheet History</h2>

<div class="search-container">
    <form id="searchForm" method="get" asp-controller="Timesheet" asp-action="History" class="form-container">
        <input type="text" id="searchInput" name="searchQuery" class="search-input" placeholder="Search with From Date or To Date or Project" value="@ViewData["SearchQuery"]" />
        <div class="search-icon" onclick="searchTimesheet()">
            <i class="fas fa-search"></i>
        </div>
        <div class="cancel-icon" onclick="clearSearch()">
            <i class="fas fa-times"></i>
        </div>
    </form>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
<table>
    <thead>
        <tr>
            <th>From Date</th>
            <th>To Date</th>
            <th>Project</th>
            <th>Monday</th>
            <th>Tuesday</th>
            <th>Wednesday</th>
            <th>Thursday</th>
            <th>Friday</th>
            <th>Saturday</th>
            <th>Sunday</th>
            <th>Total Hours</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var entry in Model)
            {
                <tr>
                    <td>@entry.FromDate.ToShortDateString()</td>
                    <td>@entry.ToDate.ToShortDateString()</td>
                    <td>@entry.Project</td>
                    <td>@entry.Monday</td>
                    <td>@entry.Tuesday</td>
                    <td>@entry.Wednesday</td>
                    <td>@entry.Thursday</td>
                    <td>@entry.Friday</td>
                    <td>@entry.Saturday</td>
                    <td>@entry.Sunday</td>
                    <td>@entry.TotalHours</td>
                    <td>
                        <!-- Edit Button -->
                        <a asp-action="Edit" asp-route-id="@entry.Id" class="btn btn-sm btn-primary">Edit</a>

                        <!-- Delete Button inside a form -->
                        <form asp-action="Delete" asp-route-id="@entry.Id" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this timesheet?');">
                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="11" class="no-records">No records found</td>
            </tr>
        }
    </tbody>
</table>
<div class="button-container">
    <a href="/Account/UserDashboard" class="btn btn-primary">Back to Dashboard</a>

    @if (Model != null && Model.Any())
    {
        <button type="button" class="btn btn-secondary download-timesheet" onclick="window.location.href='@Url.Action("DownloadTimesheet", "Timesheet")'">Download File</button>
    }
    else
    {
        <button type="button" class="btn btn-secondary download-timesheet" disabled>Download File</button>
    }
</div>


<script>
    const searchInput = document.getElementById('searchInput');
    const cancelIcon = document.querySelector('.cancel-icon');

    // Show or hide the cancel button based on the input value
    searchInput.addEventListener('input', function () {
        if (searchInput.value.trim() !== '') {
            cancelIcon.style.display = 'block'; // Show cancel icon if input is not empty
        } else {
            cancelIcon.style.display = 'none'; // Hide cancel icon if input is empty
        }
    });

    // Handle Enter key press to trigger search
    searchInput.addEventListener('keypress', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault(); // Prevent default form submission
            searchTimesheet();
        }
    });

    // Function to trigger timesheet search
    function searchTimesheet() {
        var query = searchInput.value;
        var form = document.getElementById('searchForm');
        var action = form.action;
        var queryString = new URLSearchParams(window.location.search);
        queryString.set('searchQuery', query);
        form.action = action.split('?')[0] + '?' + queryString.toString();
        form.submit();
    }

    // Clear the search input and submit the form
    function clearSearch() {
        searchInput.value = ''; // Clear the input field
        cancelIcon.style.display = 'none'; // Hide cancel icon
        searchTimesheet(); // Submit the form with an empty search query
    }

    // Ensure the cancel button is visible after a search
    document.addEventListener('DOMContentLoaded', function () {
        if (searchInput.value.trim() !== '') {
            cancelIcon.style.display = 'block'; // Show cancel icon if input is not empty
        } else {
            cancelIcon.style.display = 'none'; // Hide cancel icon on page load if input is empty
        }
    });
   
</script>
