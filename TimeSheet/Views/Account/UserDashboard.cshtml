@model TimeSheet.Models.User

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 20px;
            position: relative; /* Ensure positioning context for the logout button */
        }

        .logout-container {
            position: absolute;
            top: 20px;
            right: 20px;
        }

            .logout-container button {
                background-color: transparent;
                border: none;
                cursor: pointer;
                color: #4CAF50;
                font-size: 16px;
                padding: 10px;
            }

                .logout-container button:hover {
                    color: #d9534f; /* Change color on hover */
                }

        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 16px;
            text-align: left;
            background-color: #fff;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        thead tr {
            background-color: #4CAF50;
            color: white;
            text-align: left;
        }

        th, td {
            padding: 12px 15px;
            border: 1px solid #ddd;
            text-align: center;
        }

        tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tbody tr:hover {
            background-color: #f1f1f1;
            cursor: pointer;
        }

        td[contenteditable="true"] {
            background-color: #e9f5e9;
            outline: none;
        }

        .control-label {
            font-weight: bold;
        }

        .button-container {
            text-align: right;
            margin-top: 20px;
        }

            .button-container button {
                background-color: #4CAF50;
                color: white;
                border: none;
                padding: 10px 20px;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                font-size: 16px;
                margin: 4px 2px;
                cursor: pointer;
                border-radius: 5px;
            }

                .button-container button.reset {
                    background-color: #f44336; /* Red */
                }

        .date-container {
            display: grid;
        }

        .action-buttons {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-top: 20px;
        }

        .history-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 5px;
        }

        .btn-warning {
            background-color: #f0ad4e;
            border-color: #eea236;
        }
    </style>
</head>
<body>
    <div class="logout-container">
        <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
            <button type="submit" style="background: none; border: none; cursor: pointer; color: #4CAF50;">
                <i class="fa fa-power-off" aria-hidden="true"></i> Logout
            </button>
        </form>
    </div>

    <h2>Welcome, @Model.Username</h2>
    <p>This is your dashboard, <b>@Model.Username</b>. You are logged in!</p>

    <table>
        <thead>
            <tr>
                <th>Date</th>
                <th>Projects</th>
                <!-- Dynamic Columns -->
                <th>Monday</th>
                <th>Tuesday</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
                <th>Saturday</th>
                <th>Sunday</th>
                <!-- /Dynamic Columns -->
                <th>Total Hours</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < 7; i++)
            {
                <tr>
                    <td>
                        <div class="date-container">
                            <label><b>From:</b></label>
                            <input type="date" name="fromDate" class="from-date" autocomplete="off" />
                            <br />
                            <label><b>To:</b></label>
                            <input type="date" name="toDate" class="to-date" autocomplete="off" />
                        </div>
                    </td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td contenteditable="true"></td>
                    <td class="total-hours"></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="action-buttons">
        <div class="button-container">
            <a href="/Timesheet/History" class="btn btn-primary history-icon">
                <i class="fa fa-history"></i> View Timesheet History
            </a>
        </div>
        <div class="button-container">
            <button type="button" onclick="submitTimesheet()">Submit</button>
            <button type="button" class="reset" onclick="resetTable()">Reset</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function updateToDate(fromDateInput) {
                const fromDate = new Date(fromDateInput.value);
                if (!isNaN(fromDate.getTime())) {
                    const toDate = new Date(fromDate);
                    toDate.setDate(fromDate.getDate() + 6);

                    const formatDate = (date) => date.toISOString().split('T')[0];
                    const toDateInput = fromDateInput.closest('td').querySelector('.to-date');

                    if (toDateInput) {
                        toDateInput.value = formatDate(toDate);
                    }
                }
            }

            document.querySelectorAll('.from-date').forEach(input => {
                input.addEventListener('input', function () {
                    updateToDate(this);
                });
            });
        });

        function updateTotalHours(row) {
            let total = 0;
            let isValid = true;

            row.querySelectorAll('td[contenteditable="true"]:not(:nth-child(2))').forEach(cell => {
                let content = cell.textContent.trim();
                let [hours, minutes] = content.split('.').map(Number);

                if (!content) {
                    return;
                }

                if (isNaN(hours) || hours < 0 || hours > 24) {
                    alert("Please enter a valid number between 0 and 24 for hours.");
                    cell.textContent = '';
                    isValid = false;
                    return;
                }

                if (minutes && (minutes < 0 || minutes >= 60)) {
                    alert("Minutes should be between 0 and 59.");
                    cell.textContent = '';
                    isValid = false;
                    return;
                }

                const decimalHours = hours + (minutes ? (minutes / 60) : 0);
                total += decimalHours;
            });

            if (isValid) {
                row.querySelector('.total-hours').textContent = total.toFixed(2);
            } else {
                row.querySelector('.total-hours').textContent = '';
            }
        }

        document.querySelectorAll('td[contenteditable="true"]:not(:nth-child(2))').forEach(cell => {
            cell.addEventListener('input', function () {
                if (/[^0-9.]/.test(this.textContent)) {
                    alert("Please enter only numbers.");
                    this.textContent = this.textContent.replace(/[^0-9.]/g, '');
                }
                updateTotalHours(this.parentElement);
            });
        });

        function submitTimesheet() {
            const rows = document.querySelectorAll('tbody tr');
            const data = [];
            let isAnyRowValid = false;

            rows.forEach((row, index) => {
                const fromDate = row.querySelector('input[name="fromDate"]').value;
                const toDate = row.querySelector('input[name="toDate"]').value;
                const project = row.cells[1].textContent.trim();
                const totalHours = parseFloat(row.querySelector('.total-hours').textContent) || 0;

                console.log(`Row ${index + 1}:`);
                console.log("From Date: ", fromDate);
                console.log("To Date: ", toDate);
                console.log("Project: ", project);
                console.log("Total Hours: ", totalHours);

                const isRowEmpty = !fromDate && !toDate && !project && totalHours === 0;
                const isRowValid = fromDate && toDate && project && totalHours > 0;

                if (isRowValid) {
                    isAnyRowValid = true;
                }

                if (!isRowEmpty) {
                    data.push({ fromDate, toDate, project, totalHours });
                }
            });

            if (isAnyRowValid) {
                alert("Timesheet submitted successfully!");
                // Handle submission logic here (e.g., AJAX request or form submission)
            } else {
                alert("Please ensure all rows are filled out correctly.");
            }
        }

        function resetTable() {
            document.querySelectorAll('tbody tr').forEach(row => {
                row.querySelectorAll('td[contenteditable="true"]').forEach(cell => {
                    cell.textContent = '';
                });

                row.querySelectorAll('input').forEach(input => {
                    input.value = '';
                });

                row.querySelector('.total-hours').textContent = '';
            });
        }
    </script>
</body>
</html>
