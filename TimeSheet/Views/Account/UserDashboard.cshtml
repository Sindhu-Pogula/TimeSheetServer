@model TimeSheet.Models.User

<h2>Welcome, @Model.Username</h2>
<p>This is your dashboard, <b>@Model.Username</b>. You are logged in!</p>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        text-align: left;
        background-color: #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    thead tr {
        background-color: #4CAF50;
        color: white;
        text-align: left;
    }

    th, td {
        padding: 12px 15px;
        border: 1px solid #ddd;
        text-align: center;
    }

    tbody tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    tbody tr:hover {
        background-color: #f1f1f1;
        cursor: pointer;
    }

    td[contenteditable="true"] {
        background-color: #e9f5e9;
        outline: none;
    }

    .control-label {
        font-weight: bold;
    }

    .button-container {
        text-align: right;
        margin-top: 20px;
    }

        .button-container button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 5px;
        }

            .button-container button.reset {
                background-color: #f44336; /* Red */
            }

    .date-container {
        display: grid;
    }

    .action-buttons {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .history-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 5px;
    }
</style>

<form asp-action="Signup" method="post">
    <div class="form-group">
        <label asp-for="Username" class="control-label">Username:</label>
        <span class="form-control-plaintext">@Model.Username</span>
        <input type="hidden" asp-for="Username" />
    </div>

    <div class="form-group">
        <label asp-for="Email" class="control-label">Email:</label>
        <span class="form-control-plaintext">@Model.Email</span>
        <input type="hidden" asp-for="Email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

</form>

<table>
    <thead>
        <tr>
            <th>Date</th>
            <th>Projects</th>
            <!-- Dynamic Columns -->
            <th>Monday</th>
            <th>Tuesday</th>
            <th>Wednesday</th>
            <th>Thursday</th>
            <th>Friday</th>
            <th>Saturday</th>
            <th>Sunday</th>
            <!-- /Dynamic Columns -->
            <th>Total Hours</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < 7; i++)
        {
            <tr>
                <td>
                    <div class="date-container">
                        <label><b>From:</b></label>
                        <input type="date" name="fromDate" class="from-date" autocomplete="off" />
                        <br />
                        <label><b>To:</b></label>
                        <input type="date" name="toDate" class="to-date" autocomplete="off" />
                    </div>
                </td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td contenteditable="true"></td>
                <td class="total-hours"></td>
            </tr>
        }
    </tbody>
</table>

<script>
    function updateTotalHours(row) {
        let total = 0;
        let isValid = true;

        row.querySelectorAll('td[contenteditable="true"]:not(:nth-child(2))').forEach(cell => {
            let content = cell.textContent.trim();

            // Ensure there's no more than one decimal point
            if ((content.match(/\./g) || []).length > 1) {
                alert("Please enter a valid time format (hours.minutes).");
                cell.textContent = ''; // Clear invalid entry
                isValid = false;
                return;
            }

            let [hours, minutes] = content.split('.').map(Number); // Split hours and minutes

            // Validate hours (must be between 0 and 24)
            if (isNaN(hours) || hours < 0 || hours > 24) {
                alert("Please enter a valid number between 0 and 24 for hours.");
                cell.textContent = ''; // Clear invalid entry
                isValid = false;
                return;
            }

            // Validate minutes (must be between 0 and 59)
            if (minutes && (minutes < 0 || minutes >= 60)) {
                alert("Minutes should be between 0 and 59.");
                cell.textContent = ''; // Clear invalid minutes
                isValid = false;
                return;
            }

            // Convert hours and minutes into decimal representation (minutes / 60)
            const decimalHours = hours + (minutes ? (minutes / 60) : 0);

            // Validate if the decimal hours exceed 24.00
            if (decimalHours > 24) {
                alert("Total time cannot exceed 24.00 hours.");
                cell.textContent = ''; // Clear the entry that exceeds 24.00 hours
                isValid = false;
                return;
            }

            // Add to the total for this row
            total += decimalHours;
        });

        // Update the total hours column if the input is valid
        if (isValid) {
            row.querySelector('.total-hours').textContent = total.toFixed(2); // Keep 2 decimal places
        }
    }

    // Attach input event to each editable cell
    document.querySelectorAll('td[contenteditable="true"]:not(:nth-child(2))').forEach(cell => {
        cell.addEventListener('input', function () {
            // Check if the input contains non-numeric characters except decimal point
            if (/[^0-9.]/.test(this.textContent)) {
                alert("Please enter only numbers.");
                this.textContent = this.textContent.replace(/[^0-9.]/g, ''); // Remove non-numeric characters
            }
            updateTotalHours(this.parentElement);
        });
    });


</script>

